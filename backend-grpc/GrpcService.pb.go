// Code generated by protoc-gen-go. DO NOT EDIT.
// source: backend-grpc/GrpcService.proto

package backend_grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Grpc_Hello_Recv struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Grpc_Hello_Recv) Reset()         { *m = Grpc_Hello_Recv{} }
func (m *Grpc_Hello_Recv) String() string { return proto.CompactTextString(m) }
func (*Grpc_Hello_Recv) ProtoMessage()    {}
func (*Grpc_Hello_Recv) Descriptor() ([]byte, []int) {
	return fileDescriptor_bdf4ab14a4a50d57, []int{0}
}

func (m *Grpc_Hello_Recv) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Grpc_Hello_Recv.Unmarshal(m, b)
}
func (m *Grpc_Hello_Recv) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Grpc_Hello_Recv.Marshal(b, m, deterministic)
}
func (m *Grpc_Hello_Recv) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Grpc_Hello_Recv.Merge(m, src)
}
func (m *Grpc_Hello_Recv) XXX_Size() int {
	return xxx_messageInfo_Grpc_Hello_Recv.Size(m)
}
func (m *Grpc_Hello_Recv) XXX_DiscardUnknown() {
	xxx_messageInfo_Grpc_Hello_Recv.DiscardUnknown(m)
}

var xxx_messageInfo_Grpc_Hello_Recv proto.InternalMessageInfo

func (m *Grpc_Hello_Recv) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Grpc_Hello_Send struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Grpc_Hello_Send) Reset()         { *m = Grpc_Hello_Send{} }
func (m *Grpc_Hello_Send) String() string { return proto.CompactTextString(m) }
func (*Grpc_Hello_Send) ProtoMessage()    {}
func (*Grpc_Hello_Send) Descriptor() ([]byte, []int) {
	return fileDescriptor_bdf4ab14a4a50d57, []int{1}
}

func (m *Grpc_Hello_Send) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Grpc_Hello_Send.Unmarshal(m, b)
}
func (m *Grpc_Hello_Send) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Grpc_Hello_Send.Marshal(b, m, deterministic)
}
func (m *Grpc_Hello_Send) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Grpc_Hello_Send.Merge(m, src)
}
func (m *Grpc_Hello_Send) XXX_Size() int {
	return xxx_messageInfo_Grpc_Hello_Send.Size(m)
}
func (m *Grpc_Hello_Send) XXX_DiscardUnknown() {
	xxx_messageInfo_Grpc_Hello_Send.DiscardUnknown(m)
}

var xxx_messageInfo_Grpc_Hello_Send proto.InternalMessageInfo

func (m *Grpc_Hello_Send) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Grpc_Hello_Recv)(nil), "backend_grpc.Grpc_Hello_Recv")
	proto.RegisterType((*Grpc_Hello_Send)(nil), "backend_grpc.Grpc_Hello_Send")
}

func init() {
	proto.RegisterFile("backend-grpc/GrpcService.proto", fileDescriptor_bdf4ab14a4a50d57)
}

var fileDescriptor_bdf4ab14a4a50d57 = []byte{
	// 171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4b, 0x4a, 0x4c, 0xce,
	0x4e, 0xcd, 0x4b, 0xd1, 0x4d, 0x2f, 0x2a, 0x48, 0xd6, 0x77, 0x2f, 0x2a, 0x48, 0x0e, 0x4e, 0x2d,
	0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x81, 0xca, 0xc7, 0x83,
	0xe4, 0x95, 0x54, 0xb9, 0xf8, 0x41, 0x4a, 0xe2, 0x3d, 0x52, 0x73, 0x72, 0xf2, 0xe3, 0x83, 0x52,
	0x93, 0xcb, 0x84, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38,
	0x83, 0xc0, 0x6c, 0x34, 0x65, 0xc1, 0xa9, 0x79, 0x29, 0xd8, 0x94, 0x19, 0xf9, 0x73, 0xb1, 0x80,
	0x94, 0x09, 0xb9, 0x73, 0xb1, 0x82, 0x55, 0x0a, 0xc9, 0xea, 0x21, 0xdb, 0xa6, 0x87, 0x66, 0x95,
	0x14, 0x6e, 0x69, 0x90, 0x15, 0x4a, 0x0c, 0x4e, 0x9a, 0x51, 0xea, 0xe9, 0x99, 0x25, 0x19, 0xa5,
	0x49, 0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0xe9, 0xf9, 0xba, 0xc9, 0x89, 0xb9, 0xfa, 0xc9, 0x89, 0xb9,
	0xba, 0x25, 0xa9, 0xc5, 0x25, 0xfa, 0xc8, 0x9a, 0x93, 0xd8, 0xc0, 0xde, 0x33, 0x06, 0x04, 0x00,
	0x00, 0xff, 0xff, 0xea, 0x26, 0x8c, 0x38, 0x00, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GrpcClient is the client API for Grpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GrpcClient interface {
	Hello(ctx context.Context, in *Grpc_Hello_Recv, opts ...grpc.CallOption) (*Grpc_Hello_Send, error)
}

type grpcClient struct {
	cc grpc.ClientConnInterface
}

func NewGrpcClient(cc grpc.ClientConnInterface) GrpcClient {
	return &grpcClient{cc}
}

func (c *grpcClient) Hello(ctx context.Context, in *Grpc_Hello_Recv, opts ...grpc.CallOption) (*Grpc_Hello_Send, error) {
	out := new(Grpc_Hello_Send)
	err := c.cc.Invoke(ctx, "/backend_grpc.Grpc/Hello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GrpcServer is the server API for Grpc service.
type GrpcServer interface {
	Hello(context.Context, *Grpc_Hello_Recv) (*Grpc_Hello_Send, error)
}

// UnimplementedGrpcServer can be embedded to have forward compatible implementations.
type UnimplementedGrpcServer struct {
}

func (*UnimplementedGrpcServer) Hello(ctx context.Context, req *Grpc_Hello_Recv) (*Grpc_Hello_Send, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Hello not implemented")
}

func RegisterGrpcServer(s *grpc.Server, srv GrpcServer) {
	s.RegisterService(&_Grpc_serviceDesc, srv)
}

func _Grpc_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Grpc_Hello_Recv)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GrpcServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend_grpc.Grpc/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GrpcServer).Hello(ctx, req.(*Grpc_Hello_Recv))
	}
	return interceptor(ctx, in, info, handler)
}

var _Grpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "backend_grpc.Grpc",
	HandlerType: (*GrpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _Grpc_Hello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backend-grpc/GrpcService.proto",
}
